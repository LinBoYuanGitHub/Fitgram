//
// DO NOT EDIT.
//
// Generated by the protocol buffer compiler.
// Source: user_info.proto
//

//
// Copyright 2018, gRPC Authors All rights reserved.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
import Dispatch
import Foundation
import SwiftGRPC
import SwiftProtobuf

internal protocol Apisvr_UserServiceGetUserProfileCall: ClientCallUnary {}

fileprivate final class Apisvr_UserServiceGetUserProfileCallBase: ClientCallUnaryBase<Apisvr_GetUserProfileReq, Apisvr_GetUserProfileResp>, Apisvr_UserServiceGetUserProfileCall {
  override class var method: String { return "/apisvr.UserService/GetUserProfile" }
}

internal protocol Apisvr_UserServiceUpdateUserProfileCall: ClientCallUnary {}

fileprivate final class Apisvr_UserServiceUpdateUserProfileCallBase: ClientCallUnaryBase<Apisvr_UpdateUserProfileReq, Apisvr_UpdateUserProfileResp>, Apisvr_UserServiceUpdateUserProfileCall {
  override class var method: String { return "/apisvr.UserService/UpdateUserProfile" }
}

internal protocol Apisvr_UserServiceGetFavouriteRecipesCall: ClientCallUnary {}

fileprivate final class Apisvr_UserServiceGetFavouriteRecipesCallBase: ClientCallUnaryBase<Apisvr_GetFavouriteRecipesReq, Apisvr_GetFavouriteRecipesResp>, Apisvr_UserServiceGetFavouriteRecipesCall {
  override class var method: String { return "/apisvr.UserService/GetFavouriteRecipes" }
}

internal protocol Apisvr_UserServiceGetFavouriteRestaurantsCall: ClientCallUnary {}

fileprivate final class Apisvr_UserServiceGetFavouriteRestaurantsCallBase: ClientCallUnaryBase<Apisvr_GetFavouriteRestaurantsReq, Apisvr_GetFavouriteRestaurantsResp>, Apisvr_UserServiceGetFavouriteRestaurantsCall {
  override class var method: String { return "/apisvr.UserService/GetFavouriteRestaurants" }
}

internal protocol Apisvr_UserServiceGetFavouriteRestaurantMenusCall: ClientCallUnary {}

fileprivate final class Apisvr_UserServiceGetFavouriteRestaurantMenusCallBase: ClientCallUnaryBase<Apisvr_GetFavouriteRestaurantMenusReq, Apisvr_GetFavouriteRestaurantMenusResp>, Apisvr_UserServiceGetFavouriteRestaurantMenusCall {
  override class var method: String { return "/apisvr.UserService/GetFavouriteRestaurantMenus" }
}

internal protocol Apisvr_UserServiceAddFavouriteItemCall: ClientCallUnary {}

fileprivate final class Apisvr_UserServiceAddFavouriteItemCallBase: ClientCallUnaryBase<Apisvr_AddFavouriteItemReq, Apisvr_AddFavouriteItemResp>, Apisvr_UserServiceAddFavouriteItemCall {
  override class var method: String { return "/apisvr.UserService/AddFavouriteItem" }
}

internal protocol Apisvr_UserServiceRemoveFavouriteItemCall: ClientCallUnary {}

fileprivate final class Apisvr_UserServiceRemoveFavouriteItemCallBase: ClientCallUnaryBase<Apisvr_RemoveFavouriteItemReq, Apisvr_RemoveUserFavouriteItemResp>, Apisvr_UserServiceRemoveFavouriteItemCall {
  override class var method: String { return "/apisvr.UserService/RemoveFavouriteItem" }
}

internal protocol Apisvr_UserServiceGetGoalDetailsCall: ClientCallUnary {}

fileprivate final class Apisvr_UserServiceGetGoalDetailsCallBase: ClientCallUnaryBase<Apisvr_GetGoalDetailsReq, Apisvr_GetGoalDetailsResp>, Apisvr_UserServiceGetGoalDetailsCall {
  override class var method: String { return "/apisvr.UserService/GetGoalDetails" }
}

internal protocol Apisvr_UserServiceLinkPersonalTrainerCall: ClientCallUnary {}

fileprivate final class Apisvr_UserServiceLinkPersonalTrainerCallBase: ClientCallUnaryBase<Apisvr_LinkPersonalTrainerReq, Apisvr_LinkPersonalTrainerResp>, Apisvr_UserServiceLinkPersonalTrainerCall {
  override class var method: String { return "/apisvr.UserService/LinkPersonalTrainer" }
}

internal protocol Apisvr_UserServiceGetTrainerInfoCall: ClientCallUnary {}

fileprivate final class Apisvr_UserServiceGetTrainerInfoCallBase: ClientCallUnaryBase<Apisvr_GetTrainerInfoReq, Apisvr_GetTrainerInfoResp>, Apisvr_UserServiceGetTrainerInfoCall {
  override class var method: String { return "/apisvr.UserService/GetTrainerInfo" }
}


/// Instantiate Apisvr_UserServiceServiceClient, then call methods of this protocol to make API calls.
internal protocol Apisvr_UserServiceService: ServiceClient {
  /// Synchronous. Unary.
  func getUserProfile(_ request: Apisvr_GetUserProfileReq, metadata customMetadata: Metadata) throws -> Apisvr_GetUserProfileResp
  /// Asynchronous. Unary.
  @discardableResult
  func getUserProfile(_ request: Apisvr_GetUserProfileReq, metadata customMetadata: Metadata, completion: @escaping (Apisvr_GetUserProfileResp?, CallResult) -> Void) throws -> Apisvr_UserServiceGetUserProfileCall

  /// Synchronous. Unary.
  func updateUserProfile(_ request: Apisvr_UpdateUserProfileReq, metadata customMetadata: Metadata) throws -> Apisvr_UpdateUserProfileResp
  /// Asynchronous. Unary.
  @discardableResult
  func updateUserProfile(_ request: Apisvr_UpdateUserProfileReq, metadata customMetadata: Metadata, completion: @escaping (Apisvr_UpdateUserProfileResp?, CallResult) -> Void) throws -> Apisvr_UserServiceUpdateUserProfileCall

  /// Synchronous. Unary.
  func getFavouriteRecipes(_ request: Apisvr_GetFavouriteRecipesReq, metadata customMetadata: Metadata) throws -> Apisvr_GetFavouriteRecipesResp
  /// Asynchronous. Unary.
  @discardableResult
  func getFavouriteRecipes(_ request: Apisvr_GetFavouriteRecipesReq, metadata customMetadata: Metadata, completion: @escaping (Apisvr_GetFavouriteRecipesResp?, CallResult) -> Void) throws -> Apisvr_UserServiceGetFavouriteRecipesCall

  /// Synchronous. Unary.
  func getFavouriteRestaurants(_ request: Apisvr_GetFavouriteRestaurantsReq, metadata customMetadata: Metadata) throws -> Apisvr_GetFavouriteRestaurantsResp
  /// Asynchronous. Unary.
  @discardableResult
  func getFavouriteRestaurants(_ request: Apisvr_GetFavouriteRestaurantsReq, metadata customMetadata: Metadata, completion: @escaping (Apisvr_GetFavouriteRestaurantsResp?, CallResult) -> Void) throws -> Apisvr_UserServiceGetFavouriteRestaurantsCall

  /// Synchronous. Unary.
  func getFavouriteRestaurantMenus(_ request: Apisvr_GetFavouriteRestaurantMenusReq, metadata customMetadata: Metadata) throws -> Apisvr_GetFavouriteRestaurantMenusResp
  /// Asynchronous. Unary.
  @discardableResult
  func getFavouriteRestaurantMenus(_ request: Apisvr_GetFavouriteRestaurantMenusReq, metadata customMetadata: Metadata, completion: @escaping (Apisvr_GetFavouriteRestaurantMenusResp?, CallResult) -> Void) throws -> Apisvr_UserServiceGetFavouriteRestaurantMenusCall

  /// Synchronous. Unary.
  func addFavouriteItem(_ request: Apisvr_AddFavouriteItemReq, metadata customMetadata: Metadata) throws -> Apisvr_AddFavouriteItemResp
  /// Asynchronous. Unary.
  @discardableResult
  func addFavouriteItem(_ request: Apisvr_AddFavouriteItemReq, metadata customMetadata: Metadata, completion: @escaping (Apisvr_AddFavouriteItemResp?, CallResult) -> Void) throws -> Apisvr_UserServiceAddFavouriteItemCall

  /// Synchronous. Unary.
  func removeFavouriteItem(_ request: Apisvr_RemoveFavouriteItemReq, metadata customMetadata: Metadata) throws -> Apisvr_RemoveUserFavouriteItemResp
  /// Asynchronous. Unary.
  @discardableResult
  func removeFavouriteItem(_ request: Apisvr_RemoveFavouriteItemReq, metadata customMetadata: Metadata, completion: @escaping (Apisvr_RemoveUserFavouriteItemResp?, CallResult) -> Void) throws -> Apisvr_UserServiceRemoveFavouriteItemCall

  /// Synchronous. Unary.
  func getGoalDetails(_ request: Apisvr_GetGoalDetailsReq, metadata customMetadata: Metadata) throws -> Apisvr_GetGoalDetailsResp
  /// Asynchronous. Unary.
  @discardableResult
  func getGoalDetails(_ request: Apisvr_GetGoalDetailsReq, metadata customMetadata: Metadata, completion: @escaping (Apisvr_GetGoalDetailsResp?, CallResult) -> Void) throws -> Apisvr_UserServiceGetGoalDetailsCall

  /// Synchronous. Unary.
  func linkPersonalTrainer(_ request: Apisvr_LinkPersonalTrainerReq, metadata customMetadata: Metadata) throws -> Apisvr_LinkPersonalTrainerResp
  /// Asynchronous. Unary.
  @discardableResult
  func linkPersonalTrainer(_ request: Apisvr_LinkPersonalTrainerReq, metadata customMetadata: Metadata, completion: @escaping (Apisvr_LinkPersonalTrainerResp?, CallResult) -> Void) throws -> Apisvr_UserServiceLinkPersonalTrainerCall

  /// Synchronous. Unary.
  func getTrainerInfo(_ request: Apisvr_GetTrainerInfoReq, metadata customMetadata: Metadata) throws -> Apisvr_GetTrainerInfoResp
  /// Asynchronous. Unary.
  @discardableResult
  func getTrainerInfo(_ request: Apisvr_GetTrainerInfoReq, metadata customMetadata: Metadata, completion: @escaping (Apisvr_GetTrainerInfoResp?, CallResult) -> Void) throws -> Apisvr_UserServiceGetTrainerInfoCall

}

internal extension Apisvr_UserServiceService {
  /// Synchronous. Unary.
  func getUserProfile(_ request: Apisvr_GetUserProfileReq) throws -> Apisvr_GetUserProfileResp {
    return try self.getUserProfile(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func getUserProfile(_ request: Apisvr_GetUserProfileReq, completion: @escaping (Apisvr_GetUserProfileResp?, CallResult) -> Void) throws -> Apisvr_UserServiceGetUserProfileCall {
    return try self.getUserProfile(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func updateUserProfile(_ request: Apisvr_UpdateUserProfileReq) throws -> Apisvr_UpdateUserProfileResp {
    return try self.updateUserProfile(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func updateUserProfile(_ request: Apisvr_UpdateUserProfileReq, completion: @escaping (Apisvr_UpdateUserProfileResp?, CallResult) -> Void) throws -> Apisvr_UserServiceUpdateUserProfileCall {
    return try self.updateUserProfile(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func getFavouriteRecipes(_ request: Apisvr_GetFavouriteRecipesReq) throws -> Apisvr_GetFavouriteRecipesResp {
    return try self.getFavouriteRecipes(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func getFavouriteRecipes(_ request: Apisvr_GetFavouriteRecipesReq, completion: @escaping (Apisvr_GetFavouriteRecipesResp?, CallResult) -> Void) throws -> Apisvr_UserServiceGetFavouriteRecipesCall {
    return try self.getFavouriteRecipes(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func getFavouriteRestaurants(_ request: Apisvr_GetFavouriteRestaurantsReq) throws -> Apisvr_GetFavouriteRestaurantsResp {
    return try self.getFavouriteRestaurants(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func getFavouriteRestaurants(_ request: Apisvr_GetFavouriteRestaurantsReq, completion: @escaping (Apisvr_GetFavouriteRestaurantsResp?, CallResult) -> Void) throws -> Apisvr_UserServiceGetFavouriteRestaurantsCall {
    return try self.getFavouriteRestaurants(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func getFavouriteRestaurantMenus(_ request: Apisvr_GetFavouriteRestaurantMenusReq) throws -> Apisvr_GetFavouriteRestaurantMenusResp {
    return try self.getFavouriteRestaurantMenus(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func getFavouriteRestaurantMenus(_ request: Apisvr_GetFavouriteRestaurantMenusReq, completion: @escaping (Apisvr_GetFavouriteRestaurantMenusResp?, CallResult) -> Void) throws -> Apisvr_UserServiceGetFavouriteRestaurantMenusCall {
    return try self.getFavouriteRestaurantMenus(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func addFavouriteItem(_ request: Apisvr_AddFavouriteItemReq) throws -> Apisvr_AddFavouriteItemResp {
    return try self.addFavouriteItem(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func addFavouriteItem(_ request: Apisvr_AddFavouriteItemReq, completion: @escaping (Apisvr_AddFavouriteItemResp?, CallResult) -> Void) throws -> Apisvr_UserServiceAddFavouriteItemCall {
    return try self.addFavouriteItem(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func removeFavouriteItem(_ request: Apisvr_RemoveFavouriteItemReq) throws -> Apisvr_RemoveUserFavouriteItemResp {
    return try self.removeFavouriteItem(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func removeFavouriteItem(_ request: Apisvr_RemoveFavouriteItemReq, completion: @escaping (Apisvr_RemoveUserFavouriteItemResp?, CallResult) -> Void) throws -> Apisvr_UserServiceRemoveFavouriteItemCall {
    return try self.removeFavouriteItem(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func getGoalDetails(_ request: Apisvr_GetGoalDetailsReq) throws -> Apisvr_GetGoalDetailsResp {
    return try self.getGoalDetails(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func getGoalDetails(_ request: Apisvr_GetGoalDetailsReq, completion: @escaping (Apisvr_GetGoalDetailsResp?, CallResult) -> Void) throws -> Apisvr_UserServiceGetGoalDetailsCall {
    return try self.getGoalDetails(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func linkPersonalTrainer(_ request: Apisvr_LinkPersonalTrainerReq) throws -> Apisvr_LinkPersonalTrainerResp {
    return try self.linkPersonalTrainer(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func linkPersonalTrainer(_ request: Apisvr_LinkPersonalTrainerReq, completion: @escaping (Apisvr_LinkPersonalTrainerResp?, CallResult) -> Void) throws -> Apisvr_UserServiceLinkPersonalTrainerCall {
    return try self.linkPersonalTrainer(request, metadata: self.metadata, completion: completion)
  }

  /// Synchronous. Unary.
  func getTrainerInfo(_ request: Apisvr_GetTrainerInfoReq) throws -> Apisvr_GetTrainerInfoResp {
    return try self.getTrainerInfo(request, metadata: self.metadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  func getTrainerInfo(_ request: Apisvr_GetTrainerInfoReq, completion: @escaping (Apisvr_GetTrainerInfoResp?, CallResult) -> Void) throws -> Apisvr_UserServiceGetTrainerInfoCall {
    return try self.getTrainerInfo(request, metadata: self.metadata, completion: completion)
  }

}

internal final class Apisvr_UserServiceServiceClient: ServiceClientBase, Apisvr_UserServiceService {
  /// Synchronous. Unary.
  internal func getUserProfile(_ request: Apisvr_GetUserProfileReq, metadata customMetadata: Metadata) throws -> Apisvr_GetUserProfileResp {
    return try Apisvr_UserServiceGetUserProfileCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func getUserProfile(_ request: Apisvr_GetUserProfileReq, metadata customMetadata: Metadata, completion: @escaping (Apisvr_GetUserProfileResp?, CallResult) -> Void) throws -> Apisvr_UserServiceGetUserProfileCall {
    return try Apisvr_UserServiceGetUserProfileCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func updateUserProfile(_ request: Apisvr_UpdateUserProfileReq, metadata customMetadata: Metadata) throws -> Apisvr_UpdateUserProfileResp {
    return try Apisvr_UserServiceUpdateUserProfileCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func updateUserProfile(_ request: Apisvr_UpdateUserProfileReq, metadata customMetadata: Metadata, completion: @escaping (Apisvr_UpdateUserProfileResp?, CallResult) -> Void) throws -> Apisvr_UserServiceUpdateUserProfileCall {
    return try Apisvr_UserServiceUpdateUserProfileCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func getFavouriteRecipes(_ request: Apisvr_GetFavouriteRecipesReq, metadata customMetadata: Metadata) throws -> Apisvr_GetFavouriteRecipesResp {
    return try Apisvr_UserServiceGetFavouriteRecipesCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func getFavouriteRecipes(_ request: Apisvr_GetFavouriteRecipesReq, metadata customMetadata: Metadata, completion: @escaping (Apisvr_GetFavouriteRecipesResp?, CallResult) -> Void) throws -> Apisvr_UserServiceGetFavouriteRecipesCall {
    return try Apisvr_UserServiceGetFavouriteRecipesCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func getFavouriteRestaurants(_ request: Apisvr_GetFavouriteRestaurantsReq, metadata customMetadata: Metadata) throws -> Apisvr_GetFavouriteRestaurantsResp {
    return try Apisvr_UserServiceGetFavouriteRestaurantsCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func getFavouriteRestaurants(_ request: Apisvr_GetFavouriteRestaurantsReq, metadata customMetadata: Metadata, completion: @escaping (Apisvr_GetFavouriteRestaurantsResp?, CallResult) -> Void) throws -> Apisvr_UserServiceGetFavouriteRestaurantsCall {
    return try Apisvr_UserServiceGetFavouriteRestaurantsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func getFavouriteRestaurantMenus(_ request: Apisvr_GetFavouriteRestaurantMenusReq, metadata customMetadata: Metadata) throws -> Apisvr_GetFavouriteRestaurantMenusResp {
    return try Apisvr_UserServiceGetFavouriteRestaurantMenusCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func getFavouriteRestaurantMenus(_ request: Apisvr_GetFavouriteRestaurantMenusReq, metadata customMetadata: Metadata, completion: @escaping (Apisvr_GetFavouriteRestaurantMenusResp?, CallResult) -> Void) throws -> Apisvr_UserServiceGetFavouriteRestaurantMenusCall {
    return try Apisvr_UserServiceGetFavouriteRestaurantMenusCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func addFavouriteItem(_ request: Apisvr_AddFavouriteItemReq, metadata customMetadata: Metadata) throws -> Apisvr_AddFavouriteItemResp {
    return try Apisvr_UserServiceAddFavouriteItemCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func addFavouriteItem(_ request: Apisvr_AddFavouriteItemReq, metadata customMetadata: Metadata, completion: @escaping (Apisvr_AddFavouriteItemResp?, CallResult) -> Void) throws -> Apisvr_UserServiceAddFavouriteItemCall {
    return try Apisvr_UserServiceAddFavouriteItemCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func removeFavouriteItem(_ request: Apisvr_RemoveFavouriteItemReq, metadata customMetadata: Metadata) throws -> Apisvr_RemoveUserFavouriteItemResp {
    return try Apisvr_UserServiceRemoveFavouriteItemCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func removeFavouriteItem(_ request: Apisvr_RemoveFavouriteItemReq, metadata customMetadata: Metadata, completion: @escaping (Apisvr_RemoveUserFavouriteItemResp?, CallResult) -> Void) throws -> Apisvr_UserServiceRemoveFavouriteItemCall {
    return try Apisvr_UserServiceRemoveFavouriteItemCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func getGoalDetails(_ request: Apisvr_GetGoalDetailsReq, metadata customMetadata: Metadata) throws -> Apisvr_GetGoalDetailsResp {
    return try Apisvr_UserServiceGetGoalDetailsCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func getGoalDetails(_ request: Apisvr_GetGoalDetailsReq, metadata customMetadata: Metadata, completion: @escaping (Apisvr_GetGoalDetailsResp?, CallResult) -> Void) throws -> Apisvr_UserServiceGetGoalDetailsCall {
    return try Apisvr_UserServiceGetGoalDetailsCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func linkPersonalTrainer(_ request: Apisvr_LinkPersonalTrainerReq, metadata customMetadata: Metadata) throws -> Apisvr_LinkPersonalTrainerResp {
    return try Apisvr_UserServiceLinkPersonalTrainerCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func linkPersonalTrainer(_ request: Apisvr_LinkPersonalTrainerReq, metadata customMetadata: Metadata, completion: @escaping (Apisvr_LinkPersonalTrainerResp?, CallResult) -> Void) throws -> Apisvr_UserServiceLinkPersonalTrainerCall {
    return try Apisvr_UserServiceLinkPersonalTrainerCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

  /// Synchronous. Unary.
  internal func getTrainerInfo(_ request: Apisvr_GetTrainerInfoReq, metadata customMetadata: Metadata) throws -> Apisvr_GetTrainerInfoResp {
    return try Apisvr_UserServiceGetTrainerInfoCallBase(channel)
      .run(request: request, metadata: customMetadata)
  }
  /// Asynchronous. Unary.
  @discardableResult
  internal func getTrainerInfo(_ request: Apisvr_GetTrainerInfoReq, metadata customMetadata: Metadata, completion: @escaping (Apisvr_GetTrainerInfoResp?, CallResult) -> Void) throws -> Apisvr_UserServiceGetTrainerInfoCall {
    return try Apisvr_UserServiceGetTrainerInfoCallBase(channel)
      .start(request: request, metadata: customMetadata, completion: completion)
  }

}

/// To build a server, implement a class that conforms to this protocol.
/// If one of the methods returning `ServerStatus?` returns nil,
/// it is expected that you have already returned a status to the client by means of `session.close`.
internal protocol Apisvr_UserServiceProvider: ServiceProvider {
  func getUserProfile(request: Apisvr_GetUserProfileReq, session: Apisvr_UserServiceGetUserProfileSession) throws -> Apisvr_GetUserProfileResp
  func updateUserProfile(request: Apisvr_UpdateUserProfileReq, session: Apisvr_UserServiceUpdateUserProfileSession) throws -> Apisvr_UpdateUserProfileResp
  func getFavouriteRecipes(request: Apisvr_GetFavouriteRecipesReq, session: Apisvr_UserServiceGetFavouriteRecipesSession) throws -> Apisvr_GetFavouriteRecipesResp
  func getFavouriteRestaurants(request: Apisvr_GetFavouriteRestaurantsReq, session: Apisvr_UserServiceGetFavouriteRestaurantsSession) throws -> Apisvr_GetFavouriteRestaurantsResp
  func getFavouriteRestaurantMenus(request: Apisvr_GetFavouriteRestaurantMenusReq, session: Apisvr_UserServiceGetFavouriteRestaurantMenusSession) throws -> Apisvr_GetFavouriteRestaurantMenusResp
  func addFavouriteItem(request: Apisvr_AddFavouriteItemReq, session: Apisvr_UserServiceAddFavouriteItemSession) throws -> Apisvr_AddFavouriteItemResp
  func removeFavouriteItem(request: Apisvr_RemoveFavouriteItemReq, session: Apisvr_UserServiceRemoveFavouriteItemSession) throws -> Apisvr_RemoveUserFavouriteItemResp
  func getGoalDetails(request: Apisvr_GetGoalDetailsReq, session: Apisvr_UserServiceGetGoalDetailsSession) throws -> Apisvr_GetGoalDetailsResp
  func linkPersonalTrainer(request: Apisvr_LinkPersonalTrainerReq, session: Apisvr_UserServiceLinkPersonalTrainerSession) throws -> Apisvr_LinkPersonalTrainerResp
  func getTrainerInfo(request: Apisvr_GetTrainerInfoReq, session: Apisvr_UserServiceGetTrainerInfoSession) throws -> Apisvr_GetTrainerInfoResp
}

extension Apisvr_UserServiceProvider {
  internal var serviceName: String { return "apisvr.UserService" }

  /// Determines and calls the appropriate request handler, depending on the request's method.
  /// Throws `HandleMethodError.unknownMethod` for methods not handled by this service.
  internal func handleMethod(_ method: String, handler: Handler) throws -> ServerStatus? {
    switch method {
    case "/apisvr.UserService/GetUserProfile":
      return try Apisvr_UserServiceGetUserProfileSessionBase(
        handler: handler,
        providerBlock: { try self.getUserProfile(request: $0, session: $1 as! Apisvr_UserServiceGetUserProfileSessionBase) })
          .run()
    case "/apisvr.UserService/UpdateUserProfile":
      return try Apisvr_UserServiceUpdateUserProfileSessionBase(
        handler: handler,
        providerBlock: { try self.updateUserProfile(request: $0, session: $1 as! Apisvr_UserServiceUpdateUserProfileSessionBase) })
          .run()
    case "/apisvr.UserService/GetFavouriteRecipes":
      return try Apisvr_UserServiceGetFavouriteRecipesSessionBase(
        handler: handler,
        providerBlock: { try self.getFavouriteRecipes(request: $0, session: $1 as! Apisvr_UserServiceGetFavouriteRecipesSessionBase) })
          .run()
    case "/apisvr.UserService/GetFavouriteRestaurants":
      return try Apisvr_UserServiceGetFavouriteRestaurantsSessionBase(
        handler: handler,
        providerBlock: { try self.getFavouriteRestaurants(request: $0, session: $1 as! Apisvr_UserServiceGetFavouriteRestaurantsSessionBase) })
          .run()
    case "/apisvr.UserService/GetFavouriteRestaurantMenus":
      return try Apisvr_UserServiceGetFavouriteRestaurantMenusSessionBase(
        handler: handler,
        providerBlock: { try self.getFavouriteRestaurantMenus(request: $0, session: $1 as! Apisvr_UserServiceGetFavouriteRestaurantMenusSessionBase) })
          .run()
    case "/apisvr.UserService/AddFavouriteItem":
      return try Apisvr_UserServiceAddFavouriteItemSessionBase(
        handler: handler,
        providerBlock: { try self.addFavouriteItem(request: $0, session: $1 as! Apisvr_UserServiceAddFavouriteItemSessionBase) })
          .run()
    case "/apisvr.UserService/RemoveFavouriteItem":
      return try Apisvr_UserServiceRemoveFavouriteItemSessionBase(
        handler: handler,
        providerBlock: { try self.removeFavouriteItem(request: $0, session: $1 as! Apisvr_UserServiceRemoveFavouriteItemSessionBase) })
          .run()
    case "/apisvr.UserService/GetGoalDetails":
      return try Apisvr_UserServiceGetGoalDetailsSessionBase(
        handler: handler,
        providerBlock: { try self.getGoalDetails(request: $0, session: $1 as! Apisvr_UserServiceGetGoalDetailsSessionBase) })
          .run()
    case "/apisvr.UserService/LinkPersonalTrainer":
      return try Apisvr_UserServiceLinkPersonalTrainerSessionBase(
        handler: handler,
        providerBlock: { try self.linkPersonalTrainer(request: $0, session: $1 as! Apisvr_UserServiceLinkPersonalTrainerSessionBase) })
          .run()
    case "/apisvr.UserService/GetTrainerInfo":
      return try Apisvr_UserServiceGetTrainerInfoSessionBase(
        handler: handler,
        providerBlock: { try self.getTrainerInfo(request: $0, session: $1 as! Apisvr_UserServiceGetTrainerInfoSessionBase) })
          .run()
    default:
      throw HandleMethodError.unknownMethod
    }
  }
}

internal protocol Apisvr_UserServiceGetUserProfileSession: ServerSessionUnary {}

fileprivate final class Apisvr_UserServiceGetUserProfileSessionBase: ServerSessionUnaryBase<Apisvr_GetUserProfileReq, Apisvr_GetUserProfileResp>, Apisvr_UserServiceGetUserProfileSession {}

internal protocol Apisvr_UserServiceUpdateUserProfileSession: ServerSessionUnary {}

fileprivate final class Apisvr_UserServiceUpdateUserProfileSessionBase: ServerSessionUnaryBase<Apisvr_UpdateUserProfileReq, Apisvr_UpdateUserProfileResp>, Apisvr_UserServiceUpdateUserProfileSession {}

internal protocol Apisvr_UserServiceGetFavouriteRecipesSession: ServerSessionUnary {}

fileprivate final class Apisvr_UserServiceGetFavouriteRecipesSessionBase: ServerSessionUnaryBase<Apisvr_GetFavouriteRecipesReq, Apisvr_GetFavouriteRecipesResp>, Apisvr_UserServiceGetFavouriteRecipesSession {}

internal protocol Apisvr_UserServiceGetFavouriteRestaurantsSession: ServerSessionUnary {}

fileprivate final class Apisvr_UserServiceGetFavouriteRestaurantsSessionBase: ServerSessionUnaryBase<Apisvr_GetFavouriteRestaurantsReq, Apisvr_GetFavouriteRestaurantsResp>, Apisvr_UserServiceGetFavouriteRestaurantsSession {}

internal protocol Apisvr_UserServiceGetFavouriteRestaurantMenusSession: ServerSessionUnary {}

fileprivate final class Apisvr_UserServiceGetFavouriteRestaurantMenusSessionBase: ServerSessionUnaryBase<Apisvr_GetFavouriteRestaurantMenusReq, Apisvr_GetFavouriteRestaurantMenusResp>, Apisvr_UserServiceGetFavouriteRestaurantMenusSession {}

internal protocol Apisvr_UserServiceAddFavouriteItemSession: ServerSessionUnary {}

fileprivate final class Apisvr_UserServiceAddFavouriteItemSessionBase: ServerSessionUnaryBase<Apisvr_AddFavouriteItemReq, Apisvr_AddFavouriteItemResp>, Apisvr_UserServiceAddFavouriteItemSession {}

internal protocol Apisvr_UserServiceRemoveFavouriteItemSession: ServerSessionUnary {}

fileprivate final class Apisvr_UserServiceRemoveFavouriteItemSessionBase: ServerSessionUnaryBase<Apisvr_RemoveFavouriteItemReq, Apisvr_RemoveUserFavouriteItemResp>, Apisvr_UserServiceRemoveFavouriteItemSession {}

internal protocol Apisvr_UserServiceGetGoalDetailsSession: ServerSessionUnary {}

fileprivate final class Apisvr_UserServiceGetGoalDetailsSessionBase: ServerSessionUnaryBase<Apisvr_GetGoalDetailsReq, Apisvr_GetGoalDetailsResp>, Apisvr_UserServiceGetGoalDetailsSession {}

internal protocol Apisvr_UserServiceLinkPersonalTrainerSession: ServerSessionUnary {}

fileprivate final class Apisvr_UserServiceLinkPersonalTrainerSessionBase: ServerSessionUnaryBase<Apisvr_LinkPersonalTrainerReq, Apisvr_LinkPersonalTrainerResp>, Apisvr_UserServiceLinkPersonalTrainerSession {}

internal protocol Apisvr_UserServiceGetTrainerInfoSession: ServerSessionUnary {}

fileprivate final class Apisvr_UserServiceGetTrainerInfoSessionBase: ServerSessionUnaryBase<Apisvr_GetTrainerInfoReq, Apisvr_GetTrainerInfoResp>, Apisvr_UserServiceGetTrainerInfoSession {}

